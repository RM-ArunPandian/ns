#include <stdio.h> 
#include <stdlib.h> 
#define RTT 4
#define TIMEOUT 4 
#define TOT_FRAMES 7 
enum {NO,YES} ACK; 
int main() 
{ 
int wait_time,i=1; 
ACK=YES; 
for(;i<=TOT_FRAMES;) 
{ 
if (ACK==YES && i!=1)
{ 
printf("\nSENDER: ACK for Frame %d Received.\n",i-1); 
} 
printf("\nSENDER: Frame %d sent, Waiting for ACK...\n",i); 
ACK=NO; 
wait_time= rand() % 4+1; 
if (wait_time==TIMEOUT) 
{ 
printf("SENDER: ACK not received for Frame %d=>TIMEOUT Resending Frame...",i); 
} 
else 
{ 
sleep(RTT); 
printf("\nRECEIVER: Frame %d received, ACK sent\n",i); 
printf("--------------------------------------------"); 
ACK=YES; 
i++; 
} 
} 
return 0; 
}

Sliding Window Protocols:
Program:
#include<stdio.h>
int main()
{
 int w,i,f,frames[50];
 printf("Enter window size: ");
 scanf("%d",&w);
 printf("\nEnter number of frames to transmit: ");
 scanf("%d",&f);
 printf("\nEnter %d frames: ",f);
 for(i=1;i<=f;i++)
 scanf("%d",&frames[i]);
 printf("\nWith sliding window protocol the frames will be sent in the following manner 
(assuming no corruption of frames)\n\n");
 printf("After sending %d frames at each stage sender waits for acknowledgement sent by the 
receiver\n\n",w);
 for(i=1;i<=f;i++)
 {
 if(i%w==0)
 {
 printf("%d\n",frames[i]);
 printf("Acknowledgement of above frames sent is received by sender\n\n");
 }
 else
 printf("%d ",frames[i]);
 }
 if(f%w!=0)
 printf("\nAcknowledgement of above frames sent is received by sender\n");
 return 0;
}
